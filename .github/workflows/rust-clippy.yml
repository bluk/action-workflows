name: Rust Clippy

on:
  workflow_call:

jobs:
  clippy:
    name: Clippy
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    container: rust
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy
      - name: Install clippy
        run: rustup component add clippy
      - name: Cache cargo registry
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-registry
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache cargo index
        uses: actions/cache@v2
        env:
          cache-name: cache-cargo-git
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache cargo build
        uses: actions/cache@v2
        env:
          cache-name: cache-target
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features